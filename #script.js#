(function() {
  var generate_mappings, valid;
  generate_mappings = function(flattened_data) {
    var result, shuffled;
    result = {};
    shuffled = _.shuffle(flattened_data);
    _.each(flattened_data, function(name, idx) {
      return result[name] = shuffled[idx];
    });
    return result;
  };
  valid = function(mappings, data) {
    var name_groups, this_is_valid;
    name_groups = {};
    _.each(data, function(item, idx) {
      return _.each(item, function(name) {
        return name_groups[name] = idx;
      });
    });
    this_is_valid = true;
    _.each(mappings, function(from, to) {
      if (mappings[from] === to || name_groups[from] === name_groups[to]) {
        this_is_valid = false;
        return false;
      }
    });
    return this_is_valid;
  };
  $(function() {
    var data;
    data = [['Yalu', 'Mike'], ['Maureen', 'Scott'], ['Peter', 'Tracy'], ['Joseph']];
    window.d = data;
    return $("#generate").click(function() {
      var body, fdata, from_list, mappings, result;
      fdata = _.flatten(data);
      mappings = generate_mappings(fdata);
      while (!valid(mappings, data)) {
        mappings = generate_mappings(fdata);
      }
      consol
      result = $("#result");
      result.html("");
      result.append("<table><tr><th>Santa</th><th>Recipient</th></tr><tbody></tbody></table>");
      body = $("tbody", result);
      from_list = _.keys(mappings);
      from_list.sort();
      return _.each(from_list, function(from) {
        var to;
        to = mappings[from];
        return body.append("<tr><td>" + from + "</td><td>" + to + "</td></tr>");
      });
    });
  });
}).call(this);
